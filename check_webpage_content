#!/bin/bash

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg} 

readonly log_file=${service_log}
readonly module="checkpage"
readonly log_facility="${service}-${module}"

. ${scripts_base}/common

# times in seconds
readonly slow_page_load=3
readonly too_slow_page_load=6

print_usage(){
    echo "Syntax: $0 -u url -k keyphrase [-b]"
    exit 0
}

parse_arguments "$@"

[ -z "${hex_options}" ] && readonly hex_options="cat - "

readonly wget_error_log=$(mktemp)
readonly start_time=$(date +%s)
wget -o ${wget_error_log} -O - ${url} | ${hex_options} | grep "${keyphrase}" > /dev/null
found=$?
if [ ${found} -ne 0 -a "${keyphrase}" == "Authorization failed" ];then
    grep "${keyphrase}" ${wget_error_log}
    found=$?
fi
rm ${wget_error_log}

readonly end_time=$(date +%s)
readonly time_diff=$(( end_time - start_time))


if [ ${found} -ne 0 ]; then
	status=2
	log "${critical} ${keyphrase} not found in ${url}"
elif [ ${time_diff} -gt ${too_slow_page_load} ];then
	status=2
	log "${critical} ${url} slow (${time_diff} seconds) "
elif [ ${time_diff} -gt ${slow_page_load} ];then
	status=1
	log "${warning} ${url} slow (${time_diff} seconds)"
else
	status=0
	log "${success} ${url} OK, pageload ${time_diff} seconds"
fi
exit ${status}
