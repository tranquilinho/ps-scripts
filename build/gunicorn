#!/bin/bash

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg} && . ${scripts_base}/common

# !!!! use virtualenvs to allow different versions of gunicorn to coexist

# unicorn needs python ssl module. When using the python of the OS, it comes with
# that precompiled.
# When using "custom pythons", the ssl module is built only if the ssl library is
# detected
# Ideally, one would use our openssl, but it seems python does not offer an easy way 
# to specify a ssl library other than the one of the OS...

readonly pkg_name=gunicorn
readonly pkg_version=19.3.0
readonly url_base=https://pypi.python.org/packages/source/g/gunicorn

[ -z "${python}" ] && readonly python=${usr_prefix}/Python/bin/python

${python} -c "import sys; print (sys.version)" | logalize ${build_log}

if ${python} -c "import ${pkg_name}" ; then
    log "${info} ${pkg_name} already available in ${python}"
else
    install_prereq setuptools "mandatory"
    build_preconditions
    ${python} setup.py install
    log_status $? "${pkg_name} installed in ${python}" "Problem installing ${pkg_name} in ${python}"
fi

