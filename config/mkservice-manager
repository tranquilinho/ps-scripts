#!/bin/bash

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg}

readonly log_file=${service_log}
readonly log_facility="${service}-manager"

. ${scripts_base}/common

[ -z "${cron_enabled}" ] && readonly cron_enabled=1
[ -z "${mysql_enabled}" ] && readonly mysql_enabled=0
[ -z "${apache_enabled}" ]  && readonly apache_enabled=0

# quote the delimiter in this here document section, so the variables are not replaced
cat <<"EOF"
#!/bin/bash

readonly service_cfg=${0%/etc*}/etc/service.cfg

. ${service_cfg} 

readonly log_file=${service_log}
readonly log_facility="${service}"

. ${scripts_base}/common

service_start(){
    ${etc_dir}/service-prereq
    log "${info} Starting ${service}"
EOF
[ ${mysql_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/mysql-service start
EOF

[ ${tomcat_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/tomcat-service start
EOF

[ ${guacamole_enabled} -eq 1 ] && cat <<"EOF"
    # the "client" is a .war that runs inside tomcat 
    # by default, reset password every 7 days - unless guacamole_keep_pass=1 
    [ "G${guacamole_keep_pass}" == "G1" ] || ${scripts_base}/guacamole-change-password 
    ${scripts_base}/guacamole-service start
    # by default, run vnc service - unless vnc_on_demand=1 
    [ "G${vnc_on_demand}" == "G1" ] || ${scripts_base}/vnc-service start
EOF

[ ${apache_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/apache-service start
EOF
[ ${cron_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/cron-service start
EOF
cat <<"EOF"
    log "${info}  ${service} started"
}

service_stop(){
    log "${info} Stopping ${service}"
EOF

[ ${cron_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/cron-service stop
EOF

[ ${tomcat_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/tomcat-service stop 
EOF

[ ${guacamole_enabled} -eq 1 ] && cat <<"EOF"
    [ "G${vnc_on_demand}" == "G1" ] || ${scripts_base}/vnc-service stop
    ${scripts_base}/guacamole-service stop
EOF

[ ${apache_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/apache-service stop
EOF

[ ${mysql_enabled} -eq 1 ] && cat <<"EOF"
    ${scripts_base}/mysql-service stop
EOF

cat <<"EOF"
    log "${info} ${service} stopped"
}

case "$1" in
    "start")
	service_start
	;;
    "stop")
	service_stop
	;;
    "restart")
	service_stop
	service_start
	;;
    *)
	echo "Syntax: $0 [start|stop|restart]"
esac

exit 0

EOF

log "${info} service-manager generated"
