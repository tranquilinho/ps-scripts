#!/bin/bash

# !!!! Add a function / script to add new guacamole users?

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg} 
. ${scripts_base}/common


print_usage(){
    echo "Syntax: $0 -g guacamole_user [-o os_user] [-f (force)] [-p guacamole_pass] [-P xrdp_pass] [-h (help)]"
}


# by default, change the password only if at least
# 7 days passed since last change
readonly change_frequency=604800
readonly log_file=${log_dir}/service.log
readonly log_facility="guac-chpass"
readonly plain_db=${etc_dir}/rdp-user.txt
readonly berkeley_db=${etc_dir}/rdp-user.db

if [ ! -f ${etc_dir}/guacamole/last-passwd-change ]; then
    readonly last_change=0
else
    readonly last_change=$(cat ${etc_dir}/guacamole/last-passwd-change)
fi

readonly now=$(date +%s)
readonly seconds_since_last_change=$(( now - last_change))
if [ -z "${guacamole_users}" ]; then
    readonly cfg_file=${etc_dir}/guacamole/user-mapping.xml
else
    readonly cfg_file=${guacamole_users}
fi

force_change=0

while getopts "g:o:p:P:hf" options; do
    case "${options}" in
        g)
	    my_guacamole_user="${OPTARG}"
	    ;;
        o)
	    os_user="${OPTARG}"
	    ;;
        p)
	    guac_pass="${OPTARG}"
	    ;;
        P)
	    xrdp_pass="${OPTARG}"
	    ;;
	f)
	    force_change=1
	    ;;
	h)
	    print_usage
	    exit 0
	    ;;
    esac
done

log "${info} $0"

[ -z "${my_guacamole_user}" ] && print_usage && exit 2

[ -z "${os_user}" ] && os_user=${my_guacamole_user}

id "${os_user}" > /dev/null
[ $? -ne 0 ] && log "${critical} OS user ${os_user} does not exist" && exit 4

# With xrdp, we need to update user-mapping (plain pass) and rdp-user.db (des crypted)

if [ ${seconds_since_last_change} -ge ${change_frequency} -o ${force_change} -eq 1 ];
then 
    # db load command comes from  db5.1-util package (by now)
    which db5.1_load > /dev/null || debian_install db5.1-util

    readonly random_pass=$( random_str )
    [ -z "${guac_pass}" ] && readonly guac_pass=${random_pass}
    [ -z "${xrdp_pass}" ] && readonly xrdp_pass=${random_pass}
    readonly regex_guac=$(echo '\(.*\)'${my_guacamole_user}'" password="\([^"]*\)"')
    readonly regex_os=$(echo '\(.*\)'${os_user}'</param><param name="password">\([^<]*\)</param>')

    # Update guacamole user-mapping: change guacamole pass ("authorize username" line)
    # and its corresponding RDP pass ("param password" line)
    sed -i "s_${regex_guac}_\1${my_guacamole_user}\" password=\"${guac_pass}\"_g" ${cfg_file} && sed -i "s_${regex_os}_\1${os_user}</param><param name=\"password\">${xrdp_pass}</param>_g" ${cfg_file} && log "${success} Guacamole password updated for (${my_guacamole_user},${os_user})"
    if [ -f ${plain_db} ] && grep ${os_user} ${plain_db} > /dev/null; then
	tmp_file=$(mktemp)
	readonly cryptpass=$(echo ${xrdp_pass} | mkpasswd -s -m des)
	# the system user (for RDP) might be different from guacamole user
	awk -v np=${cryptpass} -v u=${os_user} '{print $1; if($1 == u){getline;print np}}' < ${plain_db} > ${tmp_file} && \
	    mv ${tmp_file} ${plain_db} && \
	    db5.1_load -T -t hash -f ${plain_db} ${berkeley_db} && \
	    log "${success} DB password updated for ${os_user} (${berkeley_db})"
	chown root.root ${plain_db} ${berkeley_db}
	chmod 600 ${plain_db} ${berkeley_db}

    else
	echo ${xrdp_pass} | ${scripts_base}/xrdp-user-add ${os_user}
    fi
    date +%s > ${etc_dir}/guacamole/last-passwd-change 
else
    log "${warning} Guacamole password not changed"
fi
