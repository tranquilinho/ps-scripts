#!/bin/bash

readonly service=guacamole
readonly service_root=/services/${service}

# !!!! log recipe tasks & progress in log/recipe.log

print_usage(){
    echo "Deploy guacamole service"
    echo "Syntax: $0 -g guacamole_user [-o os_user] [-s step] [-p]"
    exit 1
}



if [ "$#" -gt 0 ]; then
    while getopts "s:g:o:hp" options; do
	case "${options}" in
            s)
		step=${OPTARG}
		;;
	    g)
		readonly guacamole_user=${OPTARG}
		;;
	    o) 
		readonly guac_os_user=${OPTARG}
		;;
	    p)
		readonly pause=1
		;;
	    h)
		print_usage
		;;
            *)
		echo "Unknow option" 1>&2 
		print_usage
		;;

	esac
    done
    shift $((OPTIND-1))
fi

[ -z "${guacamole_user}" ] && print_usage
[ -z "${guac_os_user}" ] && readonly guac_os_user=ubuntu
[ -z "${step}" ] && step=1

if [ ${step} -le 1 ]; then
    # OS packages - none in this recipe ;-)
    (( step ++ ))
fi

[ ! -d ${service_root} ] && mkdir -p ${service_root}
cd ${service_root}

if [ ${step} -le 2 ]; then
    # !!!! remove git checkout when the recipe works in master
    [ ! -d scripts ] && git clone https://github.com/tranquilinho/ps-scripts.git scripts && cd scripts && git checkout testing
    echo "Creating directories"
    cd ${service_root}
    mkdir etc
    mkdir -p usr/bin usr/lib usr/src
    mkdir -p data/${service}/ data/run/apache-tomcat
    mkdir -p etc/apache2
    mkdir -p log/apache2 log/${service}
    (( step ++ ))
    [ -n "${pause}" ] && read
fi

if [ ${step} -le 3 ]; then
    echo "Creating configuration files"
    #export guacamole_user="scipion"
    #export guac_os_user="ubuntu"

    # use default tomcat_http_port in mkservice_cfg (8080), for apache http_port=80
    export http_port=80
    [ ! -f ${service_root}/etc/service.cfg ] && ${service_root}/scripts/config/mkservice_cfg -n ${service} -i cron,guacamole,tomcat,apache,https -m http://biocomp.cnb.csic.es/packages  > ${service_root}/etc/service.cfg

    [ ! -f ${service_root}/etc/service-manager ] && ${service_root}/scripts/config/mkservice-manager > ${service_root}/etc/service-manager
    chmod u+x ${service_root}/etc/service-manager
    # service-prereq
    (( step ++ ))
    [ -n "${pause}" ] && read
fi


. ${service_root}/etc/service.cfg

# what users are needed?
if [ ${step} -le 4 -a -n "${user_name}" ]; then
    echo "Creating users"
    ${scripts_base}/create-user ${user_id} ${user_name} ${data_dir}/${service}
    [ -n "${pause}" ] && read
fi

if [ ${step} -le 5  ]; then
    echo "Installing software dependencies"
    # Software dependencies
    ${scripts_base}/build/apache
    ${scripts_base}/build/tomcat
    ${scripts_base}/build/guacamole-server
    ${scripts_base}/build/guacamole-client
    ${scripts_base}/build/vncserver
    ${scripts_base}/build/xrdp
    [ -n "${pause}" ] && read
fi

if [ ${step} -le 6 ]; then    
    echo "Creating config files"
    # "final" config: apache, tomcat, xrdp...

    ${scripts_base}/config/apache2/mkhttpd_conf > ${etc_dir}/apache2/httpd.conf
# !!!! etc_dir == etc ? (service.apache is in etc, instead of etc/apache2)
    cat > ${etc_dir}/service.apache <<EOFB
#!/bin/bash
cat <<EOF
   RewriteRule ^/guacamole$ /guacamole/ [R]

<Location /guacamole/>
    Order allow,deny
    Allow from all
    ProxyPass http://localhost:${tomcat_http_port}/guacamole-0.9.9/ flushpackets=on
    ProxyPassReverse http://localhost:${tomcat_http_port}/guacamole-0.9.9/
    ProxyPassReverseCookiePath /guacamole/ /guacamole/
</Location>

<Location /guacamole/websocket-tunnel>
    Order allow,deny
    Allow from all
    ProxyPass ws://localhost:${tomcat_http_port}/guacamole-0.9.9/websocket-tunnel
    ProxyPassReverse ws://localhost:${tomcat_http_port}/guacamole-0.9.9/websocket-tunnel
</Location>
EOF
EOFB
    chmod u+x ${etc_dir}/service.apache
    # apache should listen on port 80 by default
    ${scripts_base}/config/apache2/mkservice_conf > ${etc_dir}/apache2/service.conf
    cp ${scripts_base}/config/apache2/envvars ${etc_dir}/apache2/

    [ ! -f ${etc_dir}/guacamole/user-mapping.xml ] && ${scripts_base}/config/mkguacamole_cfg

    [ ! -f ${etc_dir}/rdp-user.db ] && ${scripts_base}/

    # config file name must match daemon name
    [ ! -f /etc/pam.d/xrdp-sesman ] && ${scripts_base}/config/mkxrdp-sesman > /etc/pam.d/xrdp-sesman
    grep "db="  /etc/pam.d/xrdp-sesman || echo "WARNING - no DB set in /etc/pam.d/xrdp-sesman"
    mkdir ${etc_dir}/xrdp
    ${scripts_base}/config/xrdp/sesman.ini > ${etc_dir}/xrdp/sesman.ini
    cp ${scripts_base}/config/xrdp/startwm.sh ${etc_dir}/xrdp
    
    ${scripts_base}/config/mktomcat_cfg


cat <<EOF
Desktop environment:
Change the system default:
update-alternatives --config x-session-manager

...or add it to /etc/xrdp/startwm.sh (replacing XSession line). Examples:
# For LXDE
lxsession -s LXDE &
#For Gnome
gnome-session
# For XFCE
startxfce4

To start the service on boot (in Debian / Ubuntu), add a symlink to service-manager in init.d, and enable the service:

ln -s /services/guacamole/etc/service-manager /etc/init.d/guacamole
update-rc.d -f guacamole enable

To enable SSL support...

Add a certificate in etc/apache2/ssl (you can create one with scripts/config/make-snakeoil-cert)

Add a HTTPs VirtualHost to etc/apache2/service.conf (you may just replace the HTTP virtualhost definition and use only HTTPs)
-----
Listen 443
<VirtualHost  myserver.com:443>
   # SSL configuration
   SSLEngine on
   # Self-generated
   SSLCertificateFile      /services/guacamole/etc/apache2/ssl/guacamole.pem
   SSLCertificateKeyFile   /services/guacamole/etc/apache2/ssl/guacamole-private.key

   Include /services/guacamole/etc/apache2/service-common.conf
</VirtualHost>
(...)
-------

EOF
fi
