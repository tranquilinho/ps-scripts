#!/bin/bash

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg} 

readonly apache_cfg_dir=${etc_dir}/apache2
readonly log_file=${service_log}
readonly module="apache2"
readonly daemon="httpd"
readonly log_facility="${service}-${module}"

readonly pidfile=${run_dir}/${module}.pid

. ${scripts_base}/common

[ -z "${APACHE_ENVVARS}" ] && APACHE_ENVVARS=${apache_cfg_dir}/envvars

export APACHE_CONFDIR APACHE_ENVVARS

if [ ! -f ${APACHE_ENVVARS} ];then
    log "${critical} Missing ${APACHE_ENVVARS} file"
    exit 2
fi

. ${APACHE_ENVVARS}

ENV="env -i LANG=C PATH=/usr/local/bin:/usr/bin:/bin"
export LD_LIBRARY_PATH=${usr_prefix}/openssl/lib/
readonly APACHE2CTL=${APACHE_BIN}/apachectl
# readonly APACHE_CONFDIR=${apache_cfg_dir}
#readonly SERVER=$(hostname)
#readonly SUFFIX=${service}

# Check config files
[ ! -d ${apache_cfg_dir} ] && log "${critical} apache2 dir missing" && exit 3
[ ! -f ${apache_cfg_dir}/service.conf ] && log "${critical} service.conf missing" && exit 3
[ ! -f ${apache_cfg_dir}/envvars ] && log "${critical} envvars missing" && exit 3

apache_start(){
    log "${info} Starting ${module}"

    if [ ! -f ${APACHE2CTL} ]; then
	log "${info} Installing apache2"
	${scripts_base}/build/apache
	if [ $? -ne 0 ]; then 
	    log "${critical} Problem building apache. Cannot start web server"
	    exit 12
	fi
    fi

    # Clean inaccurate PID file
    is_running ${daemon} ${pidfile}
    local retcode=$?
    if [ ${retcode} -eq 1 -a $( cat ${pidfile} 2> /dev/null | wc -l ) -gt 0 ]; then
	rm ${pidfile}
    elif [ ${retcode} -eq 2 ]; then
	rm ${pidfile}
    fi

    # apachectl handles the PID of the daemon
    ${APACHE2CTL} start 2>&1 | logalize ${log_file}
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
	log "${success} apache2 started"
    else
        log "${critical} Problem starting apache2"
    fi
}

apache_stop(){
    log "${info} Stopping ${module}..."
    # daemon_stop ${pidfile}
    ${APACHE2CTL} stop 2>&1 | logalize ${log_file}
    log "${success} Stopped"
}

case "$1" in
    "start")
	apache_start
	;;
    "stop")
	apache_stop
	;;
    "restart")
	apache_stop
	apache_start
	;;
    reload)
	${APACHE2CTL} graceful
	;;
    *)
	echo "Syntax: $0 [start|stop|restart|reload]"
esac

exit 0


