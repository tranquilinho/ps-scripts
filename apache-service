#!/bin/bash
# Based on apache2 init script of Debian

readonly service_cfg=${0%/scripts*}/etc/service.cfg

. ${service_cfg}

readonly apache_cfg_dir=${etc_dir}/apache2
readonly log_file=${service_log}
readonly log_facility="${service}-httpd"

. ${scripts_base}/common

check_config_files(){
    [ ! -d ${apache_cfg_dir} ] && log "${critical} apache2 dir missing" && exit 3
    [ ! -f ${apache_cfg_dir}/service.conf ] && log "${critical} service.conf missing" && exit 3
    [ ! -f ${apache_cfg_dir}/envvars ] && log "${critical} envvars missing" && exit 3
    return 0
}


set -e

export LD_LIBRARY_PATH=${usr_prefix}/openssl/lib/
readonly APACHE_CONFDIR=${apache_cfg_dir}
readonly SERVER=$(hostname)
readonly SUFFIX=${service}

check_config_files

[ -z "$APACHE_ENVVARS" ] && APACHE_ENVVARS=$APACHE_CONFDIR/envvars

export APACHE_CONFDIR APACHE_ENVVARS

if [ ! -f ${APACHE_ENVVARS} ];then
    log "${critical} Missing ${APACHE_ENVVARS} file"
    exit 2
fi

. $APACHE_ENVVARS 

ENV="env -i LANG=C PATH=/usr/local/bin:/usr/bin:/bin"

# Cache options
HTCACHECLEAN_RUN=auto
HTCACHECLEAN_MODE=daemon
HTCACHECLEAN_SIZE=300M
HTCACHECLEAN_DAEMON_INTERVAL=120
HTCACHECLEAN_PATH=${data_dir}/mod_disk_cache
HTCACHECLEAN_OPTIONS=""

APACHE_HTTPD=${APACHE_BIN}/httpd
APACHE2CTL=${APACHE_BIN}/apachectl
HTCACHECLEAN="${APACHE_BIN}/htcacheclean"

PIDFILE=${APACHE_PID_FILE}
if [ -z "$PIDFILE" ] ; then
    log "${critical} ERROR: APACHE_PID_FILE needs to be defined in $APACHE_ENVVARS"
    exit 2
fi

log_progress_msg () {
    if [ -z "${1:-}" ]; then
        return 1
    fi
    /bin/echo -n " $@" 
}

check_htcacheclean() {
    [ "$HTCACHECLEAN_MODE" = "daemon" ] || return 1

    [ "$HTCACHECLEAN_RUN"  = "yes"    ] && return 0

    MODSDIR=$APACHE_MODS_ENABLED
    [ "$HTCACHECLEAN_RUN"  = "auto" \
        -a -e ${MODSDIR:-$APACHE_CONFDIR/mods-enabled}/disk_cache.load ] && \
        return 0
    
    return 1
}

start_htcacheclean() {
    if [ ! -d "$HTCACHECLEAN_PATH" ] ; then
        echo "... directory $HTCACHECLEAN_PATH does not exist!" >&2
        return 1
    fi      
    $HTCACHECLEAN $HTCACHECLEAN_OPTIONS -d$HTCACHECLEAN_DAEMON_INTERVAL \
        -i -p$HTCACHECLEAN_PATH -l$HTCACHECLEAN_SIZE
}

stop_htcacheclean() {
    pkill -P 1 -f "htcacheclean.* -p$HTCACHECLEAN_PATH " 2> /dev/null || echo ...not running
}

pidof_apache() {
        # if there is actually an apache2 process whose pid is in PIDFILE,
        # print it and return 0.
    if [ -e "$PIDFILE" ]; then
        if pidof apache2 | tr ' ' '\n' | grep -w $(cat $PIDFILE); then
            return 0
        fi
    fi
    return 1
}

apache_stop() {
    if $APACHE2CTL configtest > /dev/null 2>&1; then
                # if the config is ok than we just stop normaly
        $APACHE2CTL stop 2>&1 | grep -v 'not running' >&2 || true
    else
                # if we are here something is broken and we need to try
                # to exit as nice and clean as possible
        PID=$(pidof_apache) || true

        if [ "${PID}" ]; then
                        # in this case it is everything nice and dandy and we kill apache2
            echo
            log_warning_msg "The apache2$DIR_SUFFIX configtest failed, so we are trying to kill it manually. This is almost certainly suboptimal, so please make sure your system is working as you'd expect now!"
            kill $PID
        elif [ "$(pidof apache2)" ]; then
            if [ "$VERBOSE" != no ]; then
                echo " ... failed!"
                echo "You may still have some apache2 processes running.  There are"
                echo "processes named 'apache2' which do not match your pid file,"
                echo "and in the name of safety, we've left them alone.  Please review"
                echo "the situation by hand."
            fi
            return 1
        fi
    fi
}

case $1 in
    start)
        log "${info} Starting web server apache2"
	
	if [ ! -f $APACHE2CTL ]; then
	    log "${info} Installing apache2"
	    ${scripts_base}/build/apache
	    if [ $? -ne 0 ]; then 
		log "${critical} Problem building apache. Cannot start web server"
		exit 12
	    fi
	fi

	${APACHE2CTL} start 2>&1 | logalize ${log_file}
	if [ ${PIPESTATUS[0]} -eq 0 ]; then
            if check_htcacheclean ; then
                log_progress_msg htcacheclean
                start_htcacheclean || log_end_msg 1
            fi
	    log "${success} apache2 started"
        else
            log "${critical} Problem starting apache2"
        fi
        ;;
    stop)
        if check_htcacheclean ; then
            log "${info} Stopping web server htcacheclean"
            stop_htcacheclean
        else
            log  "${info} Stopping web server apache2"
        fi
        if apache_stop ; then
            log "${success} Stopped"
        else
            log "${info} Problem stopping apache2"
        fi
        ;;

    restart)
        if ! $APACHE2CTL configtest > /dev/null 2>&1; then
            $APACHE2CTL configtest || true
            log "${critical} problem with configtest"
            exit 1
        fi
        if check_htcacheclean ; then
            stop_htcacheclean
        else
            log "Restarting web server apache2"
        fi
        PID=$(pidof_apache) || true
	apache_stop
        if $APACHE2CTL start; then
            if check_htcacheclean ; then
                start_htcacheclean || log_end_msg 1
            fi
            log "${success} Done"
        else
            log "${critical} Problem restarting apache"
        fi
        ;;

    reload)
	${APACHE2CTL} graceful
	;;
	
    status)
        PID=$(pidof_apache) || true
        if [ -n "$PID" ]; then
            echo "Apache2$DIR_SUFFIX is running (pid $PID)."
            exit 0
        else
            echo "Apache2$DIR_SUFFIX is NOT running."
            if [ -e "$PIDFILE" ]; then
                exit 1
            else
                exit 3
            fi
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

